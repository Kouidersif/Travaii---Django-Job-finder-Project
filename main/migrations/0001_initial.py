# Generated by Django 4.1.3 on 2023-05-24 16:16

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(max_length=25)),
                ('is_company', models.BooleanField(default=False, verbose_name='is_company')),
                ('is_applicant', models.BooleanField(default=False, verbose_name='is_applicant')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('gender', models.CharField(choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE')], max_length=10)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_email_confirmed', models.BooleanField(default=False)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('privacy_policy', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='category/bg/')),
                ('description', models.TextField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('title', models.CharField(max_length=300)),
                ('message', models.TextField(max_length=5000)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Get_industry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('industry_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Job_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_type', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='number_user_facebook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('users_l', models.IntegerField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SearchedJobs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_content', models.CharField(blank=True, max_length=500, null=True)),
                ('when', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Shifts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shift', models.CharField(blank=True, max_length=25, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Where_socialMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Work_from',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_from', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(blank=True, max_length=200, null=True)),
                ('added', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Jobs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField()),
                ('tasks', models.TextField(blank=True, max_length=300, null=True)),
                ('num_people', models.CharField(blank=True, choices=[('1-10', '1-10'), ('11-20', '11-20'), ('21-49', '21-49'), ('50-99', '50-99'), ('100-249', '100-249'), ('250-499', '250-499'), ('500-999', '500-999'), ('1000 or more', '1000 or more')], max_length=25, null=True)),
                ('is_urgent', models.BooleanField(default=False)),
                ('salary_from', models.IntegerField(blank=True, null=True)),
                ('salary_to', models.IntegerField(blank=True, null=True)),
                ('salary_currency', models.CharField(choices=[('€ Euro', '€ Euro '), ('$ USD', '$ USD'), ('£ EGP', '£ EGP')], max_length=15, null=True)),
                ('pay_per', models.CharField(blank=True, choices=[('par an', 'par an'), ('par mois', 'par mois'), ('par semaine', 'par semaine'), ('par jour', 'par jour'), ('par heure', 'par heure'), ('par projet', 'par projet')], max_length=150, null=True)),
                ('benifits', models.TextField(blank=True, max_length=500, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('is_published', models.BooleanField(default=True)),
                ('interview_type', models.CharField(choices=[('Online', 'Online'), ('In Person', 'In Person'), ('Phone call', 'Phone call')], max_length=50)),
                ('job_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myjobs', to='main.category')),
                ('job_shift', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shifts', to='main.shifts')),
                ('job_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='typeofjob', to='main.job_type')),
                ('publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work', to=settings.AUTH_USER_MODEL)),
                ('save_job', models.ManyToManyField(blank=True, related_name='save_job', to=settings.AUTH_USER_MODEL)),
                ('work_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workplace', to='main.work_from')),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('company', models.CharField(max_length=150)),
                ('company_pic_exp', models.ImageField(blank=True, null=True, upload_to='experience/company/logo/')),
                ('co_location', models.CharField(max_length=300)),
                ('started', models.DateField()),
                ('end', models.DateField(blank=True, null=True)),
                ('still_working', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=40)),
                ('industry', models.CharField(max_length=100)),
                ('about_role', models.TextField()),
                ('added', models.BooleanField(default=False)),
                ('submition_date', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.CharField(blank=True, max_length=200, null=True)),
                ('University', models.CharField(blank=True, max_length=200, null=True)),
                ('speciality', models.CharField(blank=True, max_length=200, null=True)),
                ('extra_info', models.TextField(blank=True, null=True)),
                ('added', models.BooleanField(default=False)),
                ('started', models.DateField()),
                ('end', models.DateField(blank=True, null=True)),
                ('submition_date', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Billing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Applying',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about', models.TextField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('expected_salary', models.CharField(blank=True, max_length=10, null=True)),
                ('expected_salary_currency', models.CharField(blank=True, choices=[('€ Euro', '€ Euro '), ('$ USD', '$ USD'), ('£ EGP', '£ EGP')], max_length=15, null=True)),
                ('experience', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('request', models.CharField(choices=[('Approved', 'Approved'), ('Pending', 'Pending'), ('Considered', 'Considered'), ('No Luck', 'No Luck')], default='Pending', max_length=10, null=True)),
                ('response_message', models.TextField(blank=True, null=True)),
                ('submited', models.BooleanField(default=False)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.jobs')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='source',
            field=models.ForeignKey(blank=True, max_length=300, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.where_socialmedia'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
